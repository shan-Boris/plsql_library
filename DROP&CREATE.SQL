DROP TABLE RATING CASCADE CONSTRAINTS;

DROP TABLE CLIENT CASCADE CONSTRAINTS;

DROP TABLE CARD_CHANGE_TIME CASCADE CONSTRAINTS;

DROP TABLE LOG_READING_ROOM CASCADE CONSTRAINTS;

DROP TABLE PUBLISHER CASCADE CONSTRAINTS;

DROP TABLE BOOK_TYPE CASCADE CONSTRAINTS;

DROP TABLE BOOK CASCADE CONSTRAINTS;

DROP TABLE AMOUNT_OF_BOOK CASCADE CONSTRAINTS;

DROP TABLE LOG_DELIVERY_RETURN_BOOK CASCADE CONSTRAINTS;

DROP TABLE LOG_ADD_DELETE_BOOK CASCADE CONSTRAINTS;

DROP TABLE TAG CASCADE CONSTRAINTS;

DROP TABLE BOOK_HAVE_TAG CASCADE CONSTRAINTS;

DROP TABLE AUTHOR CASCADE CONSTRAINTS;

DROP TABLE AUTHOR_WROTE_BOOK CASCADE CONSTRAINTS;

DROP TABLE GENRE CASCADE CONSTRAINTS;

DROP TABLE BOOK_HAVE_GENRE CASCADE CONSTRAINTS;

DROP TABLE PREFERENCE CASCADE CONSTRAINTS;

CREATE TABLE RATING (
    RATING NUMBER(3, 1) NOT NULL,
    STIMULATION VARCHAR2(100) DEFAULT NULL,
    CONSTRAINT RATING_PK PRIMARY KEY (RATING)
);

CREATE TABLE CLIENT (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    FIRST_NAME VARCHAR2(50) NOT NULL,
    LAST_NAME VARCHAR2(50) NOT NULL,
    FATHER_NAME VARCHAR2(50),
    AGE INTEGER NOT NULL,
    EMPLOYEE VARCHAR2(50) DEFAULT NULL,
    RATING NUMBER(3, 1) NOT NULL,
    CONSTRAINT CLIENT_PK PRIMARY KEY (ID),
    CONSTRAINT FK_RATING_CLIENT FOREIGN KEY (RATING) REFERENCES RATING(RATING)
);

CREATE TABLE CARD_CHANGE_TIME (
    ID INTEGER,
    CREATE_CARD DATE NOT NULL,
    CHANGE_CARD DATE,
    DELETE_CARD DATE,
    CONSTRAINT CARD_CHANGE_TIME_PK PRIMARY KEY (ID)
);

CREATE TABLE LOG_READING_ROOM (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    ID_CLIENT INTEGER,
    ARRIVE DATE NOT NULL,
    LEAVING DATE,
    CONSTRAINT LOG_READING_ROOM_PK PRIMARY KEY (ID),
    CONSTRAINT FK_ID_CLIENT_LOG_READING_ROOM FOREIGN KEY (ID_CLIENT) REFERENCES CLIENT(ID)
);

CREATE TABLE PUBLISHER (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    PUBLISHER VARCHAR2(100) NOT NULL,
    CONSTRAINT PUBLISHER_PK PRIMARY KEY (ID)
);

CREATE TABLE BOOK_TYPE (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    TYPE VARCHAR2(50) NOT NULL,
    CONSTRAINT BOOK_TYPE_PK PRIMARY KEY (ID)
);

CREATE TABLE BOOK (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    TITLE VARCHAR2(300) NOT NULL,
    SUMMARY VARCHAR2(2000),
    YEAR_OF_PUBLICATION INTEGER,
    AGE_LIMIT INTEGER,
    PRICE NUMBER(8, 2),
    ID_PUBLISHER INTEGER,
    ID_BOOK_TYPE INTEGER,
    CONSTRAINT BOOK_PK PRIMARY KEY (ID),
    CONSTRAINT FK_ID_PUBLISHER_BOOK FOREIGN KEY (ID_PUBLISHER) REFERENCES PUBLISHER(ID),
    CONSTRAINT FK_ID_BOOK_TYPE_BOOK FOREIGN KEY (ID_BOOK_TYPE) REFERENCES BOOK_TYPE(ID)
);

CREATE TABLE AMOUNT_OF_BOOK (
    ID_BOOK INTEGER,
    TOTAL INTEGER NOT NULL,
    STORE INTEGER,
    CONSTRAINT AMOUNT_OF_BOOK_PK PRIMARY KEY (ID_BOOK),
    CONSTRAINT FK_ID_BOOK_AMOUNT_OF_BOOK FOREIGN KEY (ID_BOOK) REFERENCES BOOK(ID)
);

CREATE TABLE LOG_DELIVERY_RETURN_BOOK (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    TAKE_BOOK DATE NOT NULL,
    RETURN_BOOK DATE,
    RATING_BOOK NUMBER(3, 1),
    ID_CLIENT INTEGER,
    ID_BOOK INTEGER,
    CONSTRAINT LOG_DELIVERY_RETURN_BOOK_PK PRIMARY KEY (ID),
    CONSTRAINT FK_ID_CLIENT_LOG_DELIVERY_RETURN_BOOK FOREIGN KEY (ID_CLIENT) REFERENCES CLIENT(ID),
    CONSTRAINT FK_ID_BOOK_LOG_DELIVERY_RETURN_BOOK FOREIGN KEY (ID_BOOK) REFERENCES BOOK(ID)
);

CREATE TABLE LOG_ADD_DELETE_BOOK (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    DATELOG DATE NOT NULL,
    AMOUNT INTEGER,
    NOTE VARCHAR2(100),
    ID_CLIENT INTEGER,
    ID_BOOK INTEGER,
    ID_PUBLISHER INTEGER,
    CONSTRAINT LOG_ADD_DELETE_BOOK_PK PRIMARY KEY (ID),
    CONSTRAINT FK_ID_CLIENT_LOG_ADD_DELETE_BOOK FOREIGN KEY (ID_CLIENT) REFERENCES CLIENT(ID),
    CONSTRAINT FK_ID_BOOK_LOG_ADD_DELETE_BOOK FOREIGN KEY (ID_BOOK) REFERENCES BOOK(ID),
    CONSTRAINT FK_ID_PUBLISHER_LOG_ADD_DELETE_BOOK FOREIGN KEY (ID_PUBLISHER) REFERENCES PUBLISHER(ID)
);

CREATE TABLE TAG (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    TAG VARCHAR2(50) NOT NULL,
    CONSTRAINT TAG_PK PRIMARY KEY (ID)
);

CREATE TABLE BOOK_HAVE_TAG (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    ID_TAG INTEGER,
    ID_BOOK INTEGER,
    CONSTRAINT BOOK_HAVE_TAG_PK PRIMARY KEY (ID),
    CONSTRAINT FK_ID_BOOK_BOOK_HAVE_TAG FOREIGN KEY (ID_BOOK) REFERENCES BOOK(ID),
    CONSTRAINT FK_ID_TAG_BOOK_HAVE_TAG FOREIGN KEY (ID_TAG) REFERENCES TAG(ID)
);

CREATE TABLE AUTHOR (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    FIRST_NAME VARCHAR2(50) NOT NULL,
    LAST_NAME VARCHAR2(50) NOT NULL,
    FATHER_NAME VARCHAR2(50),
    CONSTRAINT AUTHOR_PK PRIMARY KEY (ID)
);

CREATE TABLE AUTHOR_WROTE_BOOK (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    ID_AUTHOR INTEGER,
    ID_BOOK INTEGER,
    CONSTRAINT AUTHOR_WROTE_BOOK_PK PRIMARY KEY (ID),
    CONSTRAINT FK_ID_BOOK_AUTHOR_WROTE_BOOK FOREIGN KEY (ID_BOOK) REFERENCES BOOK(ID),
    CONSTRAINT FK_ID_AUTHOR_AUTHOR_WROTE_BOOK FOREIGN KEY (ID_AUTHOR) REFERENCES AUTHOR(ID)
);

CREATE TABLE GENRE (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    GENRE VARCHAR2(350) NOT NULL,
    CONSTRAINT GENRE_PK PRIMARY KEY (ID)
);

CREATE TABLE BOOK_HAVE_GENRE (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    ID_GENRE INTEGER,
    ID_BOOK INTEGER,
    CONSTRAINT BOOK_HAVE_GENRE_PK PRIMARY KEY (ID),
    CONSTRAINT FK_ID_BOOK_BOOK_HAVE_GENRE FOREIGN KEY (ID_BOOK) REFERENCES BOOK(ID),
    CONSTRAINT FK_ID_GENRE_BOOK_HAVE_GENRE FOREIGN KEY (ID_GENRE) REFERENCES GENRE(ID)
);

CREATE TABLE PREFERENCE (
    ID INTEGER GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
    ID_GENRE INTEGER,
    ID_CLIENT INTEGER,
    CONSTRAINT PREFERENCE_PK PRIMARY KEY (ID),
    CONSTRAINT FK_ID_CLIENT_PREFERENCE FOREIGN KEY (ID_CLIENT) REFERENCES CLIENT(ID),
    CONSTRAINT FK_ID_GENRE_PREFERENCE FOREIGN KEY (ID_GENRE) REFERENCES GENRE(ID)
);